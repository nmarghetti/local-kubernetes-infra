---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: fake-cluster-external-secret
spec:
  # The name to be used on the ExternalSecrets
  externalSecretName: fake-cluster-external-secret

  # This is a basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  namespaces:
    - access-cluster-secret-1
    - access-cluster-secret-2
  namespaceSelector:
    matchLabels:
      fake-secret/cluster-secret: access-cluster-secret # Only namespaces with that label will work

  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: '1m'

  # This is the spec of the ExternalSecrets to be created
  # The content of this was taken from our ExternalSecret example
  externalSecretSpec:
    secretStoreRef:
      name: fake
      kind: ClusterSecretStore

    refreshInterval: 1m # rate SecretManager pulls GCPSM

    target:
      name: fake-secret
      template:
        engineVersion: v2
        data:
          # multiline string
          config: |
            datasources:
            - name: Graphite
              type: graphite
              access: proxy
              url: {{ .url | replace "postgres://" "postgresql://" }}
              user: "{{ .username }}"
          # using replace function to rewrite secret
          connection: '{{ .url | replace "postgres://" "postgresql://" }}'
          computed: '{{ (.complex | fromJson).test.password }}'
          url: '{{ .url }}'
    data:
      - secretKey: username
        remoteRef:
          key: user
      - secretKey: complex
        remoteRef:
          key: secrets
    dataFrom:
      - extract:
          key: database
